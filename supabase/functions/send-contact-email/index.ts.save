import { serve } from 'https://deno.land/std@0.168.0/http/server.ts'
import { Resend } from 'resend'

const resend = new Resend(Deno.env.get('RESEND_API_KEY'))

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers":
    "authorization, x-client-info, apikey, content-type",
};

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { email, name, message } = await req.json()
    let userEmailResult, notificationEmailResult;

    try {
      // Send confirmation email to user
      userEmailResult = await resend.emails.send({
        from: 'Movitax <onboarding@resend.dev>',
        to: email,
        subject: 'Thank you for contacting Movitax',
        html: `
          <h1>Thank you for reaching out!</h1>
          <p>Dear ${name},</p>
          <p>We have received your message and will get back to you shortly.</p>
        `
      })
      console.log("User email sent successfully:", userEmailResult);
    } catch (userEmailError) {
      console.error("Error sending user email:", userEmailError);
    }

    try {
      // Send notification email to Movitax (temporarily changed for testing)
      notificationEmailResult = await resend.emails.send({
        from: 'Movitax Website <onboarding@resend.dev>',
        to: 'kibuchivictor03@gmail.com', // Changed from movitaxconsultants@gmail.com for testing
        subject: 'New Contact Form Submission',
        html: `
          <h2>New Contact Form Submission</h2>
          <p><strong>Name:</strong> ${name}</p>
          <p><strong>Email:</strong> ${email}</p>
          <p><strong>Message:</strong></p>
          <p>${message}</p>
        `
      })
      console.log("Notification email sent successfully:", notificationEmailResult);
    } catch (notificationEmailError) {
      console.error("Error sending notification email:", notificationEmailError);
    }

    return new Response(JSON.stringify({ 
      success: true,
      userEmailResult,
      notificationEmailResult
    }), {
      headers: { 'Content-Type': 'application/json', ...corsHeaders },
      status: 200,
    })

  } catch (error) {
    console.error("Function error:", error);
    return new Response(JSON.stringify({ error: error.message }), {
      headers: { 'Content-Type': 'application/json', ...corsHeaders },
      status: 500,
    })
  }
})
